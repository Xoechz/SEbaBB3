-- 1
SELECT TITLE
FROM FILM f
WHERE NOT EXISTS (SELECT * FROM INVENTORY i WHERE i.FILM_ID = f.FILM_ID);

-- 2
SELECT c.FIRST_NAME, c.LAST_NAME, COUNT(*) AS RentedFilmCount
FROM CUSTOMER c
INNER JOIN RENTAL r
    ON c.CUSTOMER_ID = r.CUSTOMER_ID
INNER JOIN INVENTORY i
    ON r.INVENTORY_ID = i.INVENTORY_ID
GROUP BY c.FIRST_NAME, c.LAST_NAME
ORDER BY COUNT(*);

-- 3
SELECT output.TITLE, output.LENGTH, g.LanguageName
FROM FILM output
INNER JOIN
(SELECT l.NAME AS LanguageName, l.LANGUAGE_ID, MAX(f.LENGTH) AS MaxLength
FROM FILM f
INNER JOIN LANGUAGE l
    ON f.LANGUAGE_ID = l.LANGUAGE_ID
WHERE f.ORIGINAL_LANGUAGE_ID IS NOT NULL
GROUP BY l.NAME, l.LANGUAGE_ID) g
    ON g.LANGUAGE_ID = output.LANGUAGE_ID AND g.MaxLength = output.LENGTH
WHERE output.ORIGINAL_LANGUAGE_ID IS NOT NULL;

-- 4
SELECT c.FIRST_NAME, c.LAST_NAME, c.CUSTOMER_ID AS RentedFilmCount
FROM CUSTOMER c
INNER JOIN RENTAL r
    ON c.CUSTOMER_ID = r.CUSTOMER_ID
INNER JOIN INVENTORY i
    ON r.INVENTORY_ID = i.INVENTORY_ID
INNER JOIN FILM f
    ON f.FILM_ID = i.FILM_ID
INNER JOIN FILM_CATEGORY fc
    ON f.FILM_ID = fc.FILM_ID
INNER JOIN CATEGORY cat
    ON fc.CATEGORY_ID = cat.CATEGORY_ID
WHERE cat.NAME = 'Horror'
GROUP BY c.FIRST_NAME, c.LAST_NAME, c.CUSTOMER_ID
HAVING COUNT(*) >= 4
ORDER BY COUNT(*) DESC;

-- 5
-- Als einzelne Query ist das recht komplex, RevenuePerCustomer k√∂nnte man herausheben um die Query zu optimieren
SELECT cOut.FIRST_NAME, cOut.LAST_NAME, cOut.CUSTOMER_ID, cOut.STORE_ID, RevenuePerCustomer.Revenue
FROM CUSTOMER cOut
INNER JOIN
(SELECT CUSTOMER_ID, SUM(AMOUNT) AS Revenue FROM PAYMENT GROUP BY CUSTOMER_ID) RevenuePerCustomer
    ON RevenuePerCustomer.CUSTOMER_ID = cOut.CUSTOMER_ID
INNER JOIN
(SELECT c.STORE_ID, MAX(RevenuePerCustomer.Revenue) AS MaxRevenue
FROM CUSTOMER c
INNER JOIN
(SELECT CUSTOMER_ID, SUM(AMOUNT) AS Revenue FROM PAYMENT GROUP BY CUSTOMER_ID) RevenuePerCustomer
    ON c.CUSTOMER_ID = RevenuePerCustomer.CUSTOMER_ID
GROUP BY c.STORE_ID) MaxRevenuePerStore
    ON cOut.STORE_ID = MaxRevenuePerStore.STORE_ID AND RevenuePerCustomer.Revenue = MaxRevenuePerStore.MaxRevenue;